'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _approveItem = require('./approve-item.js');

var _approveItem2 = _interopRequireDefault(_approveItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ApproveList = function (_Component) {
	_inherits(ApproveList, _Component);

	function ApproveList(props) {
		_classCallCheck(this, ApproveList);

		return _possibleConstructorReturn(this, (ApproveList.__proto__ || Object.getPrototypeOf(ApproveList)).call(this, props));
	}

	_createClass(ApproveList, [{
		key: 'render',
		value: function render() {
			var self = this;
			var allComplate = this.props.data.allComplate;
			var length = this.props.data.activitys.length;
			var nodes = this.props.data.activitys.map(function (nodeItem, index) {
				var nodePosition = index == 0 ? "start" : index == self.props.data.activitys.length - 1 ? "end" : "mid";
				var status = nodeItem.status;
				switch (status + "") {
					case '1':
						nodeItem.status = 'done';
						break;
					case '2':
						nodeItem.status = 'doing';
						break;
					case '3':
						nodeItem.status = 'undo';
						break;
					case '4':
						nodeItem.status = 'readmore';
						break;
					case '6':
						nodeItem.status = 'termination';
					default:
						break;
				}

				return _react2.default.createElement(_approveItem2.default, {
					data: self.props.data,
					address: self.props.address,
					node: nodeItem,
					showPic: self.props.showPic,
					key: index,
					index: index - 1,
					showPop: self.props.showPop,
					translateX: self.props.translateX,
					allComplate: allComplate,
					isOverFlow: self.props.isOverFlow,
					length: length,
					translation: self.props.translation,
					wrapWidth: self.props.wrapWidth,
					position: nodePosition });
			});
			var translate3d = 'translate3d(' + this.props.positionX + 'px,0px,0px)';

			return _react2.default.createElement(
				'div',
				{ className: 'approve-status-wrap', style: { "transform": translate3d } },
				nodes
			);
		}
	}]);

	return ApproveList;
}(_react.Component);

module.exports = ApproveList;