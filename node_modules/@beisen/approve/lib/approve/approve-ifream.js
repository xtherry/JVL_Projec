'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NodeIframe = function (_Component) {
	_inherits(NodeIframe, _Component);

	function NodeIframe(props) {
		_classCallCheck(this, NodeIframe);

		return _possibleConstructorReturn(this, (NodeIframe.__proto__ || Object.getPrototypeOf(NodeIframe)).call(this, props));
	}

	_createClass(NodeIframe, [{
		key: 'render',
		value: function render() {
			var width = window.innerWidth - 400;
			var height = window.innerHeight * 0.8 - 102 - 30;
			var style = {
				"width": "100%",
				"height": height + "px",
				"rameborder": 0,
				"border": "none",
				"min-height": "370px"
			};
			var closeButton = this.props.closePopUp ? _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement('button', { onClick: this.props.closePopUp })
			) : "";
			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement('iframe', { rameborder: 0, style: style, src: this.props.address }),
				closeButton
			);
		}
	}]);

	return NodeIframe;
}(_react.Component);

module.exports = NodeIframe;