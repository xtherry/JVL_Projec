import React, {Component, PropTypes} from 'react'
import {render} from 'react-dom';
import ApproveList from './approve-list.js'
import ApproveButton from './approve-button.js'

// import data from './mockdata.js' 1111
class Approve extends Component {
	
	constructor(props){
		super(props);
		this.state = {
			isOverFlow : false
			,translateX:0
			,maxTranslateX:0
			,showPic : false
			,wrapWidth:null,
		}
	}
	componentDidMount(){
		var self = this;
		window.addEventListener('resize', ::self.contentCreate);
		this.contentCreate();
	}
	contentCreate(){
		let wrapWidth = this.refs.root?this.refs.root.offsetWidth : window.offsetWidth;
		let approveListLength = this.props.approveData.activitys.length || 0;
		let listMinWidth = approveListLength * 120;
		let showPicAllWidth = approveListLength * 140;
		this.setState({maxTranslateX:wrapWidth-listMinWidth});
		
		((wrapWidth - listMinWidth) < 100)?this.setState({
			isOverFlow:true
			// isOverFlow : false
			,translateX:wrapWidth-approveListLength*124
			,maxTranslateX:0
			,wrapWidth:wrapWidth
			,approveData :this.props.approveData

		}):this.setState({
			isOverFlow:false
			,translateX:0
			,wrapWidth:wrapWidth
			,maxTranslateX:0
			,approveData :this.props.approveData
		});

		wrapWidth - showPicAllWidth > 0 ? this.setState({showPic : true}) : this.setState({showPic : false})
	}
	//是否显示分页按钮
	showBtn(){
		if(this.state.isOverFlow) return(<ApproveButton data={this.props.approveData} goLeftHandle={::this.listGoRight} goRightHandle={::this.listGoLeft}/>)
		return false;
	}
	listGoLeft(){
		let self = this;
		this.setState({translateX:this.state.translateX - 124});
		// if((this.state.maxTranslateX - 120) > this.state.translateX){
		// 	setTimeout(function(){
		// 		self.setState({translateX:self.state.translateX + 120});
		// 	},300)
		// }
		
		let wrapWidth = this.refs.root.offsetWidth || window.offsetWidth;
		let approveListLength = this.props.approveData.activitys.length || 0;
		if((this.state.translateX) < wrapWidth-approveListLength*124){
			setTimeout(function(){
				self.setState({translateX:self.state.translateX + 124});
			},300)
		}
		
		
	}
	listGoRight(){
		let self = this;
		this.setState({translateX:this.state.translateX + 120});
		if(this.state.translateX+120 >= 0){
			setTimeout(function(){
				self.setState({translateX:0});
			},300)
		}
	}
	render(){
		let button = this.showBtn();
		let className = 'approve-wrap '+(this.state.isOverFlow?"wrap-extend":'');

		return (
				<div className="root" ref="root" id='nodeTipsRoot'>
					<div className={className}>
						<ApproveList 
							wrapWidth={this.state.wrapWidth}
							isOverFlow={this.state.isOverFlow}
							translateX={this.state.translateX}
							data={this.props.approveData}
							address={this.props.address}
							showPop={this.props.showPop}
							positionX={this.state.translateX}
                            translation={this.props.translation}
							showPic ={this.state.showPic} 
						/>
						{button}
					</div>
				</div>
		)
		
	}
}
module.exports = Approve;

